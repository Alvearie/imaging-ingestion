name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Java 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Set docker symlink
      run: sudo ln -s $(which docker) /usr/local/bin/docker
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Get Imaging Ingestion Version
      run: echo "IMAGING_INGESTION_VERSION=$(./gradlew :properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')" >> $GITHUB_ENV
    - name: Print Imaging Ingestion Version
      run: echo $IMAGING_INGESTION_VERSION
    - name: Build Optimized Images with Gradle on Merge
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        ./gradlew -Pquarkus.package.type=native build
        ./gradlew -Pquarkus.package.type=native -Dquarkus.datasource.db-kind=db2 :dicom-event-driven-ingestion:clean :dicom-event-driven-ingestion:build
    - name: Build Images with Gradle on Pull Request
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        ./gradlew build
        ./gradlew -Dquarkus.datasource.db-kind=db2 :dicom-event-driven-ingestion:clean :dicom-event-driven-ingestion:build
    - name: Cleanup Gradle Cache
      # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
      # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
    - name: Build Operator
      run: docker build -t alvearie/imaging-ingestion-operator:${{ env.IMAGING_INGESTION_VERSION }} .
      working-directory: imaging-ingestion-operator
    - name: Build Operator Bundle
      run: docker build -f bundle.Dockerfile -t alvearie/imaging-ingestion-operator-bundle:${{ env.IMAGING_INGESTION_VERSION }} .
      working-directory: imaging-ingestion-operator
    - name: List Docker Images
      run: docker images
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Push Docker Images
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        docker push alvearie/dicomweb-stow-binding:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicomweb-fhir-binding:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicom-event-driven-ingestion-postgresql:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicom-event-driven-ingestion-db2:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicomweb-wado-service:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicomweb-stow-service:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicom-dimse-service:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/dicom-dimse-proxy:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/imaging-ingestion-operator:${{ env.IMAGING_INGESTION_VERSION }}
        docker push alvearie/imaging-ingestion-operator-bundle:${{ env.IMAGING_INGESTION_VERSION }}
