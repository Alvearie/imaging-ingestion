# Create a cluster scoped self signing issuer.  
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: selfsigning-cluster-ca
spec:
  selfSigned: {}


# Create a self-signed CA certificate for the NATS certificate issuer
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: nats-ca
  namespace: nats-pot
spec:
  secretName: nats-ca
  duration: 8736h # 1 year
  renewBefore: 240h # 10 days
  issuerRef:
    # The name of the cluster issuer 
    name: selfsigning-cluster-ca
    kind: ClusterIssuer
  commonName: nats-ca
  usages: 
    - cert sign 
  organization:
  - Alvearie
  isCA: true

# Create a NATS issuer
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: nats-ca
  namespace: nats-pot
spec:
  ca:
    secretName: nats-ca

# Create a certificate for the NATS server
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: nats-secure-server-tls
  namespace: nats-pot
spec:
  secretName: nats-secure-server-tls
  duration: 2160h # 90 days
  renewBefore: 240h # 10 days
  usages:
  - signing
  - key encipherment
  - server auth
  issuerRef:
    name: nats-ca
    kind: Issuer
  organization:
  - Alvearie
  commonName: nats-secure.nats-pot.svc.cluster.local
  dnsNames:
  - nats-secure.nats-pot.svc


# Create a certificate for the NATS Routes
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: nats-secure-routes-tls
  namespace: nats-pot
spec:
  secretName: nats-secure-routes-tls
  duration: 2160h # 90 days
  renewBefore: 240h # 10 days
  usages:
  - signing
  - key encipherment
  - server auth
  - client auth # included because routes mutually verify each other
  issuerRef:
    name: nats-ca
    kind: Issuer
  organization:
  - Alvearie
  commonName: "*.nats-secure-mgmt.nats-pot.svc.cluster.local"
  dnsNames:
  - "*.nats-secure-mgmt.nats-pot.svc"
